// <auto-generated />
using ExamCreateDemo.Web.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ExamCreateDemo.Web.Migrations
{
    [DbContext(typeof(ExamContext))]
    [Migration("20211020095811_UpdatedTables")]
    partial class UpdatedTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.11");

            modelBuilder.Entity("ExamCreateDemo.Web.Entity.Article", b =>
                {
                    b.Property<int>("ArticleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ArticleContent")
                        .HasColumnType("TEXT");

                    b.Property<string>("Header")
                        .HasColumnType("TEXT");

                    b.HasKey("ArticleId");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("ExamCreateDemo.Web.Entity.Exam", b =>
                {
                    b.Property<int>("ExamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ExamArticleContent")
                        .HasColumnType("TEXT");

                    b.Property<string>("ExamArticleHeader")
                        .HasColumnType("TEXT");

                    b.Property<string>("ExamCreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("QuestionFour")
                        .HasColumnType("TEXT");

                    b.Property<string>("QuestionFourAnswerA")
                        .HasColumnType("TEXT");

                    b.Property<string>("QuestionFourAnswerB")
                        .HasColumnType("TEXT");

                    b.Property<string>("QuestionFourAnswerC")
                        .HasColumnType("TEXT");

                    b.Property<string>("QuestionFourAnswerD")
                        .HasColumnType("TEXT");

                    b.Property<string>("QuestionFourCorrectAnswer")
                        .HasColumnType("TEXT");

                    b.Property<string>("QuestionOne")
                        .HasColumnType("TEXT");

                    b.Property<string>("QuestionOneAnswerA")
                        .HasColumnType("TEXT");

                    b.Property<string>("QuestionOneAnswerB")
                        .HasColumnType("TEXT");

                    b.Property<string>("QuestionOneAnswerC")
                        .HasColumnType("TEXT");

                    b.Property<string>("QuestionOneAnswerD")
                        .HasColumnType("TEXT");

                    b.Property<string>("QuestionOneCorrectAnswer")
                        .HasColumnType("TEXT");

                    b.Property<string>("QuestionThree")
                        .HasColumnType("TEXT");

                    b.Property<string>("QuestionThreeAnswerA")
                        .HasColumnType("TEXT");

                    b.Property<string>("QuestionThreeAnswerB")
                        .HasColumnType("TEXT");

                    b.Property<string>("QuestionThreeAnswerC")
                        .HasColumnType("TEXT");

                    b.Property<string>("QuestionThreeAnswerD")
                        .HasColumnType("TEXT");

                    b.Property<string>("QuestionThreeCorrectAnswer")
                        .HasColumnType("TEXT");

                    b.Property<string>("QuestionTwo")
                        .HasColumnType("TEXT");

                    b.Property<string>("QuestionTwoAnswerA")
                        .HasColumnType("TEXT");

                    b.Property<string>("QuestionTwoAnswerB")
                        .HasColumnType("TEXT");

                    b.Property<string>("QuestionTwoAnswerC")
                        .HasColumnType("TEXT");

                    b.Property<string>("QuestionTwoAnswerD")
                        .HasColumnType("TEXT");

                    b.Property<string>("QuestionTwoCorrectAnswer")
                        .HasColumnType("TEXT");

                    b.HasKey("ExamId");

                    b.ToTable("Exams");
                });

            modelBuilder.Entity("ExamCreateDemo.Web.Entity.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("FullName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<string>("RePassword")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
